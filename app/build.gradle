plugins {
    id 'com.android.application'
}

android {
    namespace 'com.example.faceauthentication'
    compileSdk 34

    defaultConfig {
        applicationId "com.example.faceauthentication"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
        }
    }
    packagingOptions {
        exclude "lib/riscv64/**" // Exclude riscv64 ABI
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.android.gms:play-services-mlkit-face-detection:17.1.0'
    implementation 'androidx.activity:activity:1.8.0'
    implementation project(path: ':achalasecure')
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'



        // CameraX core library using the camera2 implementation
        def camerax_version = "1.3.4"
        // The following line is optional, as the core library is included indirectly by camera-camera2
        implementation "androidx.camera:camera-core:${camerax_version}"
        implementation "androidx.camera:camera-camera2:${camerax_version}"
        // If you want to additionally use the CameraX Lifecycle library
        implementation "androidx.camera:camera-lifecycle:${camerax_version}"
        // If you want to additionally use the CameraX VideoCapture library
        implementation "androidx.camera:camera-video:${camerax_version}"
        // If you want to additionally use the CameraX View class
        implementation "androidx.camera:camera-view:${camerax_version}"

        // If you want to additionally use the CameraX Extensions library
        implementation "androidx.camera:camera-extensions:${camerax_version}"
        implementation 'com.google.mlkit:face-detection:16.1.7'
        implementation 'com.google.mlkit:object-detection:17.0.2'

//    // Import the BoM for the Firebase platform
//    implementation(platform("com.google.firebase:firebase-bom:33.5.0"))
//
//    // Add the dependency for the Firebase ML model downloader library
//    // When using the BoM, you don't specify versions in Firebase library dependencies
//    implementation("com.google.firebase:firebase-ml-modeldownloader")
//
//    // Also add the dependency for the TensorFlow Lite library and specify its version
//    implementation("org.tensorflow:tensorflow-lite:2.3.0")

    implementation 'org.tensorflow:tensorflow-lite:2.11.0'
    implementation 'org.tensorflow:tensorflow-lite-gpu:2.11.0'
    implementation 'org.tensorflow:tensorflow-lite-gpu-api:2.11.0'
    implementation 'org.tensorflow:tensorflow-lite-support:0.4.2'
    implementation 'com.google.code.gson:gson:2.11.0'

    implementation 'com.github.f0ris.sweetalert:library:1.5.1'

    //implementation 'org.opencv:opencv-android:4.5.3'
    implementation 'org.opencv:opencv:4.10.0'
    //implementation 'com.making.secure'



}
configurations.all {
    resolutionStrategy {
        eachDependency {
            if ((requested.group == "org.jetbrains.kotlin") && (requested.name.startsWith("kotlin-stdlib"))) {
                useVersion("1.8.0")
            }
        }
    }
}